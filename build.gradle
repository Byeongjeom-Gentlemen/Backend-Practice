buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.13'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'com.diffplug.spotless' version '6.11.0'
    //querydsl 추가
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.sh'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '11'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    /* 파일을 바이트 형태로 바꾸기 위한 의존성 */
    // https://mvnrepository.com/artifact/commons-io/commons-io
    implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'

    /* Apache Tika - 파일 변조 체크 */
    // https://mvnrepository.com/artifact/org.apache.tika/tika-core
    implementation group: 'org.apache.tika', name: 'tika-core', version: '2.7.0'

    /* QueryDSL */
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

    /* Redisson */
    implementation 'org.redisson:redisson-spring-boot-starter:3.17.7'

    /* Redis */
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    /* jwt */
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    /* Swagger */
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.12'

    /* 암호화를 위한 security 의존성 주입 */
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-test'

    /* 유효성 검증을 위한 validation 의존성 주입 */
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-devtools'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
}

tasks.named('test') {
    useJUnitPlatform()
}

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

spotless {
    java {
        target("**/*.java")
        removeUnusedImports()
        trimTrailingWhitespace()
        endWithNewline()
        importOrder()
        indentWithTabs()
        googleJavaFormat().aosp()
    }
}
